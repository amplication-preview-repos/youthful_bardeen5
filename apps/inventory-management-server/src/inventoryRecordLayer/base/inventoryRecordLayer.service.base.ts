/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  InventoryRecordLayer as PrismaInventoryRecordLayer,
} from "@prisma/client";

export class InventoryRecordLayerServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.InventoryRecordLayerCountArgs, "select">
  ): Promise<number> {
    return this.prisma.inventoryRecordLayer.count(args);
  }

  async inventoryRecordLayers(
    args: Prisma.InventoryRecordLayerFindManyArgs
  ): Promise<PrismaInventoryRecordLayer[]> {
    return this.prisma.inventoryRecordLayer.findMany(args);
  }
  async inventoryRecordLayer(
    args: Prisma.InventoryRecordLayerFindUniqueArgs
  ): Promise<PrismaInventoryRecordLayer | null> {
    return this.prisma.inventoryRecordLayer.findUnique(args);
  }
  async createInventoryRecordLayer(
    args: Prisma.InventoryRecordLayerCreateArgs
  ): Promise<PrismaInventoryRecordLayer> {
    return this.prisma.inventoryRecordLayer.create(args);
  }
  async updateInventoryRecordLayer(
    args: Prisma.InventoryRecordLayerUpdateArgs
  ): Promise<PrismaInventoryRecordLayer> {
    return this.prisma.inventoryRecordLayer.update(args);
  }
  async deleteInventoryRecordLayer(
    args: Prisma.InventoryRecordLayerDeleteArgs
  ): Promise<PrismaInventoryRecordLayer> {
    return this.prisma.inventoryRecordLayer.delete(args);
  }
}
